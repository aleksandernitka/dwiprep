digraph G {
    splines="TRUE";

	overlap=scale

    /* Entities */
    
    subgraph cluster_preproc {
        label="Preprocessing";
        n1 [label="Copy files to tmp", shape = "box"];
        n2 [label="AP", shape = "box3d"];   
        nbval [label="bval", shape = "box"];
        nbvec [label="bvec", shape = "box"];
        njson [label="json", shape = "box"];
        n3 [label="PA", shape = "box3d"];
        nt1 [label="sT1w", shape = "box"];
        n4 [label="Denoise\npatch2self", shape = "box"]
        n5 [label="AP denoised", shape = "box3d"]
        n6 [label="PA denoised", shape = "box3d"]
        n7 [label="QA for each trial\noriginal, denoised, residuals", shape = "folder", style="filled", fillcolor="lightblue", fontsize=8];
        n8 [label="Gradient table", shape = "box"];
        n9 [label="AP b0s", shape="box"];
        n10 [label="PA b0s", shape="box"];
        n11 [label="QA info\nregarding gradients", shape = "folder", style="filled", fillcolor="lightblue", fontsize=8];
        n12 [label="AP + PA b0s", shape="box"];
        n13 [label="Params file", shape="box"];
        n14 [label="topup", shape="septagon", style="filled", fillcolor="lightyellow"];
        n15 [label="apply\ntopup", shape="septagon", style="filled", fillcolor="lightyellow"];
        n16 [label="topup outpus", shape="box"];

        subgraph cluser_denoise {
            label="Denoise";
        }

        subgraph cluser_topup {
            label="Topup"
        }

        subgraph cluster_eddy {
            label="Eddy correction";
        }



    }

    /* Relationships */
    n1 -> n2
    n1 -> n3
    n1 -> nt1
    n1 -> nbval
    n1 -> nbvec
    n1 -> njson
    n2 -> n4[label="211 vols"]
    n3 -> n4[label="5 vols"]
    nbval -> n4
    n4 -> n5
    n4 -> n6
    n4 -> n7
    nbval -> n8
    nbvec -> n8
    n8 -> n9[label="b0s mask"]
    n5 -> n9
    n6 -> n10
    n8 -> n11
    n9 -> n12[label="fslmerge"]
    n10 -> n12[label="fslmerge"]
    n9 -> n13
    n10 -> n13
    njson -> n13[label="TotalReadoutTime"]
    n13 -> n14
    n12 -> n14
    n14 -> n15
    n5 -> n15
    n6 -> n15
    nbval -> n15
    n13 -> n15
    n15 -> n16
    /* Ranks */
    { rank=same; n2; n3; };
}