# Generated by Neurodocker and Reproenv.

Bootstrap: docker
From: debian:bullseye-slim

%environment
export FSLDIR="/opt/fsl-6.0.5"
export PATH="/opt/fsl-6.0.5/bin:$PATH"
export FSLOUTPUTTYPE="NIFTI_GZ"
export FSLMULTIFILEQUIT="TRUE"
export FSLTCLSH="/opt/fsl-6.0.5/bin/fsltclsh"
export FSLWISH="/opt/fsl-6.0.5/bin/fslwish"
export FSLLOCKDIR=""
export FSLMACHINELIST=""
export FSLREMOTECALL=""
export FSLGECUDAQ="cuda.q"
export PATH="/opt/mrtrix3-3.0.2/bin:$PATH"
export LD_LIBRARY_PATH="/opt/mrtrix3-3.0.2/lib:$PATH"
export CONDA_DIR="/opt/miniconda-py39_4.12.0"
export PATH="/opt/miniconda-py39_4.12.0/bin:$PATH"

%post
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    ca-certificates \
    curl \
    dc \
    file \
    libfontconfig1 \
    libfreetype6 \
    libgl1-mesa-dev \
    libgl1-mesa-dri \
    libglu1-mesa-dev \
    libgomp1 \
    libice6 \
    libopenblas-base \
    libxcursor1 \
    libxft2 \
    libxinerama1 \
    libxrandr2 \
    libxrender1 \
    libxt6 \
    nano \
    sudo \
    libfftw3-dev \
    libfftw3-doc \
    tig \
    wget
rm -rf /var/lib/apt/lists/*
echo "Downloading FSL ..."
mkdir -p /opt/fsl-6.0.5
curl -fL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.5-centos7_64.tar.gz \
| tar -xz -C /opt/fsl-6.0.5 --strip-components 1 
echo "Installing FSL conda environment ..."
bash /opt/fsl-6.0.5/etc/fslconf/fslpython_install.sh -f /opt/fsl-6.0.5

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bzip2 \
    ca-certificates \
    curl \
    libpng16-16 \
    libtiff5
rm -rf /var/lib/apt/lists/*
echo "Downloading MRtrix3 ..."
mkdir -p /opt/mrtrix3-3.0.2
curl -fsSL https://github.com/MRtrix3/mrtrix3/releases/download/3.0.2/conda-linux-mrtrix3-3.0.2-h6bb024c_0.tar.bz2 \
| tar -xj -C /opt/mrtrix3-3.0.2

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bzip2 \
    ca-certificates \
    curl
rm -rf /var/lib/apt/lists/*
# Install dependencies.
export PATH="/opt/miniconda-py39_4.12.0/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-py39_4.12.0
rm -f "$conda_installer"
# Prefer packages in conda-forge
conda config --system --prepend channels conda-forge
# Packages in lower-priority channels not considered if a package with the same
# name exists in a higher priority channel. Can dramatically speed up installations.
# Conda recommends this as a default
# https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html
conda config --set channel_priority strict
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
# Enable `conda activate`
conda init bash
conda install -y  --name base \
    "jupyter" \
    "jupyterlab" \
    "dipy=1.5.0" \
    "fury=0.8.0" \
    "scikit-learn=1.1.2" \
    "scikit-image=0.19.3" \
    "pillow" \
    "nilearn=0.9.0"
# Clean up
sync && conda clean --all --yes && sync
rm -rf ~/.cache/pip/*

touch /opt/dwiprep.txt

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    git \
    htop \
    nano \
    tig \
    tree \
    vim \
    wget
rm -rf /var/lib/apt/lists/*

# Save specification to JSON.
printf '{ \
  "pkg_manager": "apt", \
  "existing_users": [ \
    "root" \
  ], \
  "instructions": [ \
    { \
      "name": "from_", \
      "kwds": { \
        "base_image": "debian:bullseye-slim" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "FSLDIR": "/opt/fsl-6.0.5", \
        "PATH": "/opt/fsl-6.0.5/bin:$PATH", \
        "FSLOUTPUTTYPE": "NIFTI_GZ", \
        "FSLMULTIFILEQUIT": "TRUE", \
        "FSLTCLSH": "/opt/fsl-6.0.5/bin/fsltclsh", \
        "FSLWISH": "/opt/fsl-6.0.5/bin/fslwish", \
        "FSLLOCKDIR": "", \
        "FSLMACHINELIST": "", \
        "FSLREMOTECALL": "", \
        "FSLGECUDAQ": "cuda.q" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    bc \\\\\\n    ca-certificates \\\\\\n    curl \\\\\\n    dc \\\\\\n    file \\\\\\n    libfontconfig1 \\\\\\n    libfreetype6 \\\\\\n    libgl1-mesa-dev \\\\\\n    libgl1-mesa-dri \\\\\\n    libglu1-mesa-dev \\\\\\n    libgomp1 \\\\\\n    libice6 \\\\\\n    libopenblas-base \\\\\\n    libxcursor1 \\\\\\n    libxft2 \\\\\\n    libxinerama1 \\\\\\n    libxrandr2 \\\\\\n    libxrender1 \\\\\\n    libxt6 \\\\\\n    nano \\\\\\n    sudo \\\\\\n    wget\\nrm -rf /var/lib/apt/lists/*\\necho \\"Downloading FSL ...\\"\\nmkdir -p /opt/fsl-6.0.5\\ncurl -fL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.5-centos7_64.tar.gz \\\\\\n| tar -xz -C /opt/fsl-6.0.5 --strip-components 1 \\necho \\"Installing FSL conda environment ...\\"\\nbash /opt/fsl-6.0.5/etc/fslconf/fslpython_install.sh -f /opt/fsl-6.0.5" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "PATH": "/opt/mrtrix3-3.0.2/bin:$PATH", \
        "LD_LIBRARY_PATH": "/opt/mrtrix3-3.0.2/lib:$PATH" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    bzip2 \\\\\\n    ca-certificates \\\\\\n    curl \\\\\\n    libpng16-16 \\\\\\n    libtiff5\\nrm -rf /var/lib/apt/lists/*\\necho \\"Downloading MRtrix3 ...\\"\\nmkdir -p /opt/mrtrix3-3.0.2\\ncurl -fsSL https://github.com/MRtrix3/mrtrix3/releases/download/3.0.2/conda-linux-mrtrix3-3.0.2-h6bb024c_0.tar.bz2 \\\\\\n| tar -xj -C /opt/mrtrix3-3.0.2" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "CONDA_DIR": "/opt/miniconda-py39_4.12.0", \
        "PATH": "/opt/miniconda-py39_4.12.0/bin:$PATH" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    bzip2 \\\\\\n    ca-certificates \\\\\\n    curl\\nrm -rf /var/lib/apt/lists/*\\n# Install dependencies.\\nexport PATH=\\"/opt/miniconda-py39_4.12.0/bin:$PATH\\"\\necho \\"Downloading Miniconda installer ...\\"\\nconda_installer=\\"/tmp/miniconda.sh\\"\\ncurl -fsSL -o \\"$conda_installer\\" https://repo.continuum.io/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh\\nbash \\"$conda_installer\\" -b -p /opt/miniconda-py39_4.12.0\\nrm -f \\"$conda_installer\\"\\n# Prefer packages in conda-forge\\nconda config --system --prepend channels conda-forge\\n# Packages in lower-priority channels not considered if a package with the same\\n# name exists in a higher priority channel. Can dramatically speed up installations.\\n# Conda recommends this as a default\\n# https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html\\nconda config --set channel_priority strict\\nconda config --system --set auto_update_conda false\\nconda config --system --set show_channel_urls true\\n# Enable `conda activate`\\nconda init bash\\nconda install -y  --name base \\\\\\n    \\"jupyter\\" \\\\\\n    \\"jupyterlab\\" \\\\\\n    \\"dipy=1.5.0\\" \\\\\\n    \\"fury=0.8.0\\" \\\\\\n    \\"scikit-learn=1.1.2\\" \\\\\\n    \\"scikit-image=0.19.3\\" \\\\\\n    \\"pillow\\" \\\\\\n    \\"nilearn=0.9.0\\"\\n# Clean up\\nsync && conda clean --all --yes && sync\\nrm -rf ~/.cache/pip/*" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "touch /opt/dwiprep.txt" \
      } \
    }, \
    { \
      "name": "install", \
      "kwds": { \
        "pkgs": [ \
          "git", \
          "vim", \
          "nano", \
          "htop", \
          "tree", \
          "wget", \
          "tig" \
        ], \
        "opts": null \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    git \\\\\\n    htop \\\\\\n    nano \\\\\\n    tig \\\\\\n    tree \\\\\\n    vim \\\\\\n    wget\\nrm -rf /var/lib/apt/lists/*" \
      } \
    } \
  ] \
}' > /.reproenv.json
# End saving to specification to JSON.
